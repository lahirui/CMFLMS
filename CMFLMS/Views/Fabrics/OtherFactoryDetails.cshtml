@using PagedList.Mvc;
@using PagedList;
@model IPagedList<CMFLMS.Models.Library.Fabrics>

@{
    ViewBag.Title = "OtherFactoryDetails";
}

<h2>Other Factories Fabric Details</h2>
<div class="container">
    <div class="form-group">
        <div class="input-group">
            <span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>
            <input type="text" id="Search" placeholder="Search View" class="form-control" />
        </div>
    </div>
</div>
<p style="color:red"><b>Showing Samples @ViewBag.OtherFactories of @ViewBag.Totcount of Other Factories</b></p>

<table class="table table-striped table-bordered table-hover table-condensed">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().FabricId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Compisition1)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Compisition2)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Compisition3)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Compisition4)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Compisition5)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Quality)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().WidthInches)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().WidthCm)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Weight)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Suppliers.SupplierName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Constructions.ConstructionType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Yarns.YarnCount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Locationss.LocationName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Knits.KnitType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Structures.StructureValue)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Colours.ColourName)
        </th>
        <th>
                @Html.DisplayNameFor(model => model.First().Factories.FactoryName)
            </th>
        @*<th>
                @Html.DisplayNameFor(model => model.Fac)
            </th>*@
        <th>
            @Html.DisplayName("Last Updated Date")
        </th>
        <th>
            @Html.DisplayName("Finishing Category")
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Remarks)
        </th>
       
      
    </tr>

    @foreach (var item in Model)
    {
        if (ViewBag.OtherFacFab != item.Factories.FactoryName)
        {
            <tr class="Search">
                <td>
                    @Html.DisplayFor(modelItem => item.FabricId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Compisition1)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Compisition2)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Compisition3)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Compisition4)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Compisition5)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quality)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.WidthInches)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.WidthCm)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Weight)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Suppliers.SupplierName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Constructions.ConstructionType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Yarns.YarnCount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Locationss.LocationName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Knits.KnitType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Structures.StructureValue)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Colours.ColourName)
                </td>
                <td>
                        @Html.DisplayFor(modelItem => item.Factories.FactoryName)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.Fac)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.AddedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FinCategory.FinishCat)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Remarks)
                </td>
                
            </tr>
        }

    }

</table>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>
    $(document).ready(function () {
        function Contains(text_one, text_two)
        {
            if (text_one.indexOf(text_two) != -1)
                return true;
        }
        $("#Search").keyup(function ()
        {
            var searchText = $("#Search").val().toLowerCase();
            $(".Search").each(function()
            {
                if (!Contains($(this).text().toLowerCase(), searchText)) {
                    $(this).hide();
                }
                else {
                    $(this).show();
                }
                });
        });
    });
</script>
@Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchby = Request.QueryString["searchby"], search = Request.QueryString["search"] }),
    new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true })