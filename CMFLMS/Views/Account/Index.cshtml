@using PagedList.Mvc;
@using PagedList;
@model IPagedList<Microsoft.AspNet.Identity.EntityFramework.IdentityUser>
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
<h4>Users</h4>
<div class="container">
    <div class="form-group">
        <div class="input-group">
            <span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>
            <input type="text" id="Search" placeholder="Search View" class="form-control" />
        </div>
    </div>
</div>
<p>
    @Html.ActionLink("Create New", "Register")
 </p>
<p style="color:red"><b>Total Users: @ViewBag.count <i>(Cannot delete the logged in user)</i></b></p>
@if (TempData["Success"] != null)
{
    <p class="alert alert-success" id="successMessage">@TempData["Success"]</p>
}

    <table class="table table-striped table-bordered table-hover table-condensed">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().UserName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Email)
            </th>
            <th>
                @Html.DisplayName("Action")
            </th>

        </tr>
        @foreach (var item in Model)
        {
            if (ViewBag.User != item.UserName)
            { 
            <tr class="Search">
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @*@Html.ActionLink("Edit", "EditUser", new { id=item.Id}) |*@
                    @Html.ActionLink("Delete", "DeleteUser", new { id = item.Id })

                </td>
            </tr>
            }
        }
    </table>

    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script>
        $(document).ready(function () {
            function Contains(text_one, text_two) {
                if (text_one.indexOf(text_two) != -1)
                    return true;
            }
            $("#Search").keyup(function () {
                var searchText = $("#Search").val().toLowerCase();
                $(".Search").each(function () {
                    if (!Contains($(this).text().toLowerCase(), searchText)) {
                        $(this).hide();
                    }
                    else {
                        $(this).show();
                    }
                });
            });
        });
    </script>
@Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchby = Request.QueryString["searchby"], search = Request.QueryString["search"] }),
    new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true })
